<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.yeti.tests</groupId>
    <artifactId>tests</artifactId>
    <packaging>jar</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>Test library for YETI</name>
	<inceptionYear>2011</inceptionYear>
    <url>https://github.com/jfpoilpret/yeti-tests</url>

	<properties>
		<javaVersion>1.6</javaVersion>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> 
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding> 
		<maven.build.timestamp.format>yyyy-MM-dd_HH-mm-ss</maven.build.timestamp.format>
	</properties>

    <build>
        <plugins>
			<plugin>
				<!-- download source and javadoc from all dependencies and make them
					available within eclipse. Requires explicit call to: mvn eclipse:eclipse -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<addVersionToProjectName>true</addVersionToProjectName>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${javaVersion}</source>
					<target>${javaVersion}</target>
				</configuration>
			</plugin>

            <plugin>
                <groupId>org.yeti</groupId>
                <artifactId>yeti-maven-plugin</artifactId>
                <version>0.1-SNAPSHOT</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <commands>
                        //put any code which should be executed at repl start here
                        println "to change this edit the contents of the &lt;commands&gt; tag in the project pom.xml at the yeti plugin configuration"
                    </commands>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.yeti</groupId>
                <artifactId>yeti-maven-plugin</artifactId>
                <version>0.1-SNAPSHOT</version>
            </plugin>
        </plugins>
    </reporting>

    <dependencies>
        <dependency>
            <groupId>org.yeti</groupId>
            <artifactId>yeti</artifactId>
            <version>0.1-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
        </dependency>
    </dependencies>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly Open Source Software license</comments>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>jfpoilpret</id>
			<name>Jean-Francois Poilpret</name>
			<email>jfpoilpret@gmail.fr</email>
			<url>http://jfpoilpret.blogspot.com</url>
			<roles>
				<role>project owner</role>
				<role>developer</role>
			</roles>
			<timezone>+1</timezone>
		</developer>
	</developers>

    <repositories>
        <repository>
            <id>chrisis.snapshots</id>
            <name>chrisis-maven-repo</name>
            <url>http://chrisichris.github.com/chrisis-maven-repo/snapshots</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>chrisis-plugin.snapshots</id>
            <name>chrisis-plugin-maven-repo</name>
            <url>http://chrisichris.github.com/chrisis-maven-repo/snapshots</url>
        </pluginRepository>
    </pluginRepositories>
</project>
